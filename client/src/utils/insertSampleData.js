// Sample data insertion script for Supabase
import { supabase } from '../lib/supabase';

export async function insertSampleData() {
  console.log('üå± Inserting sample data...');

  try {
    // Sample course modules
    const { error: moduleError } = await supabase
      .from('course_modules')
      .upsert([
        {
          id: '11111111-1111-1111-1111-111111111111',
          title: 'Arabic Alphabet and Basic Reading',
          title_bn: '‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶¨‡¶∞‡ßç‡¶£‡¶Æ‡¶æ‡¶≤‡¶æ ‡¶ì ‡¶™‡ßç‡¶∞‡¶æ‡¶•‡¶Æ‡¶ø‡¶ï ‡¶™‡¶°‡¶º‡¶æ',
          description: 'Learn the Arabic alphabet and basic reading skills',
          description_bn: '‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶¨‡¶∞‡ßç‡¶£‡¶Æ‡¶æ‡¶≤‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶æ‡¶•‡¶Æ‡¶ø‡¶ï ‡¶™‡¶°‡¶º‡¶æ‡¶∞ ‡¶¶‡¶ï‡ßç‡¶∑‡¶§‡¶æ ‡¶∂‡¶ø‡¶ñ‡ßÅ‡¶®',
          level: 1,
          order: 1,
          is_active: true
        },
        {
          id: '22222222-2222-2222-2222-222222222222',
          title: 'Basic Grammar and Sentence Structure',
          title_bn: '‡¶Æ‡ßå‡¶≤‡¶ø‡¶ï ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶∞‡¶£ ‡¶ì ‡¶¨‡¶æ‡¶ï‡ßç‡¶Ø ‡¶ó‡¶†‡¶®',
          description: 'Introduction to Arabic grammar and sentence formation',
          description_bn: '‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶∞‡¶£ ‡¶ì ‡¶¨‡¶æ‡¶ï‡ßç‡¶Ø ‡¶ó‡¶†‡¶®‡ßá‡¶∞ ‡¶™‡¶∞‡¶ø‡¶ö‡¶Ø‡¶º',
          level: 2,
          order: 2,
          is_active: true
        },
        {
          id: '33333333-3333-3333-3333-333333333333',
          title: 'Quranic Arabic and Religious Texts',
          title_bn: '‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶®‡¶ø‡¶ï ‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶ì ‡¶ß‡¶∞‡ßç‡¶Æ‡ßÄ‡¶Ø‡¶º ‡¶™‡¶æ‡¶†‡ßç‡¶Ø',
          description: 'Understanding Quranic Arabic and religious terminology',
          description_bn: '‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶®‡¶ø‡¶ï ‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶ß‡¶∞‡ßç‡¶Æ‡ßÄ‡¶Ø‡¶º ‡¶™‡¶∞‡¶ø‡¶≠‡¶æ‡¶∑‡¶æ ‡¶¨‡ßã‡¶ù‡¶æ',
          level: 3,
          order: 3,
          is_active: true
        }
      ]);

    if (moduleError) throw moduleError;
    console.log('‚úÖ Course modules inserted');

    // Sample instructors
    const { error: instructorError } = await supabase
      .from('instructors')
      .upsert([
        {
          id: 'aaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa',
          name: 'Dr. Ahmed Hassan',
          name_bn: '‡¶°. ‡¶Ü‡¶π‡¶Æ‡ßá‡¶¶ ‡¶π‡¶æ‡¶∏‡¶æ‡¶®',
          email: 'ahmed.hassan@example.com',
          bio: 'PhD in Arabic Literature with 15 years of teaching experience',
          bio_bn: '‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶∏‡¶æ‡¶π‡¶ø‡¶§‡ßç‡¶Ø‡ßá ‡¶™‡¶ø‡¶è‡¶á‡¶ö‡¶°‡¶ø, ‡ßß‡ß´ ‡¶¨‡¶õ‡¶∞‡ßá‡¶∞ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï‡¶§‡¶æ‡¶∞ ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û‡¶§‡¶æ',
          qualifications: 'PhD in Arabic Literature, MA in Islamic Studies',
          qualifications_bn: '‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶∏‡¶æ‡¶π‡¶ø‡¶§‡ßç‡¶Ø‡ßá ‡¶™‡¶ø‡¶è‡¶á‡¶ö‡¶°‡¶ø, ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡¶ï ‡¶∏‡ßç‡¶ü‡¶æ‡¶°‡¶ø‡¶ú‡ßá ‡¶è‡¶Æ‡¶è',
          is_active: true
        },
        {
          id: 'bbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb',
          name: 'Ustada Fatima Ali',
          name_bn: '‡¶â‡¶∏‡ßç‡¶§‡¶æ‡¶¶‡¶æ ‡¶´‡¶æ‡¶§‡¶ø‡¶Æ‡¶æ ‡¶Ü‡¶≤‡ßÄ',
          email: 'fatima.ali@example.com',
          bio: 'Specialist in Quranic Arabic with focus on modern teaching methods',
          bio_bn: '‡¶Ü‡¶ß‡ßÅ‡¶®‡¶ø‡¶ï ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø‡¶∞ ‡¶â‡¶™‡¶∞ ‡¶¶‡ßÉ‡¶∑‡ßç‡¶ü‡¶ø ‡¶®‡¶ø‡¶¨‡¶¶‡ßç‡¶ß ‡¶ï‡¶∞‡ßá ‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶®‡¶ø‡¶ï ‡¶Ü‡¶∞‡¶¨‡¶ø‡¶∞ ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û',
          qualifications: 'MA in Quranic Studies, Certificate in Modern Language Teaching',
          qualifications_bn: '‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶®‡¶ø‡¶ï ‡¶∏‡ßç‡¶ü‡¶æ‡¶°‡¶ø‡¶ú‡ßá ‡¶è‡¶Æ‡¶è, ‡¶Ü‡¶ß‡ßÅ‡¶®‡¶ø‡¶ï ‡¶≠‡¶æ‡¶∑‡¶æ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶Ø‡¶º ‡¶∏‡¶æ‡¶∞‡ßç‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶ü',
          is_active: true
        }
      ]);

    if (instructorError) throw instructorError;
    console.log('‚úÖ Instructors inserted');

    // Sample live classes
    const tomorrow = new Date();
    tomorrow.setDate(tomorrow.getDate() + 1);
    const dayAfterTomorrow = new Date();
    dayAfterTomorrow.setDate(dayAfterTomorrow.getDate() + 2);
    const threeDaysLater = new Date();
    threeDaysLater.setDate(threeDaysLater.getDate() + 3);

    const { error: classError } = await supabase
      .from('live_classes')
      .upsert([
        {
          id: 'ccccccc-cccc-cccc-cccc-cccccccccccc',
          title: 'Arabic Alphabet Basics',
          title_bn: '‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶¨‡¶∞‡ßç‡¶£‡¶Æ‡¶æ‡¶≤‡¶æ‡¶∞ ‡¶Æ‡ßå‡¶≤‡¶ø‡¶ï ‡¶¨‡¶ø‡¶∑‡¶Ø‡¶º',
          description: 'Introduction to Arabic letters and pronunciation',
          description_bn: '‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶Ö‡¶ï‡ßç‡¶∑‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶â‡¶ö‡ßç‡¶ö‡¶æ‡¶∞‡¶£‡ßá‡¶∞ ‡¶™‡¶∞‡¶ø‡¶ö‡¶Ø‡¶º',
          module_id: '11111111-1111-1111-1111-111111111111',
          instructor_id: 'aaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa',
          scheduled_at: tomorrow.toISOString(),
          duration: 90,
          max_participants: 30,
          current_participants: 8,
          is_active: true
        },
        {
          id: 'ddddddd-dddd-dddd-dddd-dddddddddddd',
          title: 'Reading Practice Session',
          title_bn: '‡¶™‡¶°‡¶º‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶∂‡ßÄ‡¶≤‡¶® ‡¶∏‡ßá‡¶∂‡¶®',
          description: 'Practice reading Arabic text with proper pronunciation',
          description_bn: '‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶ö‡ßç‡¶ö‡¶æ‡¶∞‡¶£‡¶∏‡¶π ‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶™‡¶æ‡¶†‡ßç‡¶Ø ‡¶™‡¶°‡¶º‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶∂‡ßÄ‡¶≤‡¶®',
          module_id: '11111111-1111-1111-1111-111111111111',
          instructor_id: 'bbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb',
          scheduled_at: dayAfterTomorrow.toISOString(),
          duration: 60,
          max_participants: 25,
          current_participants: 12,
          is_active: true
        },
        {
          id: 'eeeeeee-eeee-eeee-eeee-eeeeeeeeeeee',
          title: 'Grammar Fundamentals',
          title_bn: '‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶∞‡¶£‡ßá‡¶∞ ‡¶Æ‡ßå‡¶≤‡¶ø‡¶ï ‡¶¨‡¶ø‡¶∑‡¶Ø‡¶º',
          description: 'Basic Arabic grammar rules and sentence structure',
          description_bn: '‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶∞‡¶£‡ßá‡¶∞ ‡¶Æ‡ßå‡¶≤‡¶ø‡¶ï ‡¶®‡¶ø‡¶Ø‡¶º‡¶Æ ‡¶ì ‡¶¨‡¶æ‡¶ï‡ßç‡¶Ø ‡¶ó‡¶†‡¶®',
          module_id: '22222222-2222-2222-2222-222222222222',
          instructor_id: 'aaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa',
          scheduled_at: threeDaysLater.toISOString(),
          duration: 75,
          max_participants: 30,
          current_participants: 5,
          is_active: true
        }
      ]);

    if (classError) throw classError;
    console.log('‚úÖ Live classes inserted');

    console.log('üéâ Sample data insertion completed successfully!');
    return { success: true };

  } catch (error) {
    console.error('‚ùå Error inserting sample data:', error);
    return { success: false, error };
  }
}